{"remainingRequest":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsubasa/project/frontend/src/components/Group/Group.vue?vue&type=style&index=0&id=8c3a3562&scoped=true&lang=css&","dependencies":[{"path":"/Users/tsubasa/project/frontend/src/components/Group/Group.vue","mtime":1626681251652},{"path":"/Users/tsubasa/project/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNHcm91cCB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwp9CiNidG5Db2xvciB7CiAgYm9yZGVyLWNvbG9yOiAjMDQ3NGJkOwogIGJhY2tncm91bmQtY29sb3I6ICMwNDljZmM7CiAgY29sb3I6IHdoaXRlOwp9Cg=="},{"version":3,"sources":["Group.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Group.vue","sourceRoot":"src/components/Group","sourcesContent":["<template>\n  <div id=\"Group\">\n    <v-container class=\"mt-5\">\n      <v-row>\n        <v-col>\n          <v-text-field\n            v-model=\"groupName\"\n            type=\"text\"\n            :label=\"words.group.groupname\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n\n      <v-row>\n        <v-col>\n          <v-select\n            :items=\"userInfo\"\n            v-model=\"selected\"\n            chips\n            item-text=\"name\"\n            item-value=\"id\"\n            multiple\n            :label=\"words.group.name\"\n          >\n          </v-select>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col>\n          <v-btn medium id=\"btnColor\" @click=\"GroupAdd\">\n            {{ words.group.button }}\n          </v-btn>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n<script>\n// import moment from \"moment\";\nimport axios from \"axios\";\nimport totalApis from \"@/common/totalApis.js\";\nimport MyEnum from \"@/common/myEnum.js\";\nimport words from \"@/words/words.json\";\n\nexport default {\n  name: \"Group\",\n  data: () => ({\n    words: words,\n    groupName: [],\n    userInfo: [],\n    selected: [],\n  }),\n  beforeMount: function () {\n    var self = this;\n\n    axios({\n      method: \"get\",\n      url: totalApis.apis().userList,\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n      },\n    })\n      .then((response) => {\n        const array = response?.data;\n\n        for (const i in array) {\n          const userId = array[i].id;\n          const userNames = array[i].name;\n          self.userInfo.push({ name: userNames, id: userId });\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  },\n  methods: {\n    GroupAdd: function () {\n      if (this.groupName === \"\") {\n        alert(\"グループ名を入力してください\");\n        return;\n      }\n\n      axios({\n        method: \"post\",\n        url: totalApis.apis().groupCreate,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n        data: {\n          // 入力したグループ名\n          group_name: this.groupName,\n          // 選択したユーザーID\n          group_members: this.selected,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n    tokenCheck: function () {\n      const token = localStorage.getItem(\"JWT\");\n      if (!token) {\n        this.$router.push(MyEnum.menuPages().SignIn);\n      }\n    },\n  },\n  mounted: function () {\n    this.tokenCheck();\n  },\n};\n</script>\n<style scoped>\n#Group {\n  width: 100%;\n  height: 100%;\n}\n#btnColor {\n  border-color: #0474bd;\n  background-color: #049cfc;\n  color: white;\n}\n</style>\n"]}]}