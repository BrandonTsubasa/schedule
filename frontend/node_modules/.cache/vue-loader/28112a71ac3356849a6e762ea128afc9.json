{"remainingRequest":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsubasa/project/frontend/src/views/user/User.vue?vue&type=style&index=0&id=46ee9385&scoped=true&lang=css&","dependencies":[{"path":"/Users/tsubasa/project/frontend/src/views/user/User.vue","mtime":1630542905882},{"path":"/Users/tsubasa/project/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojVXNlciB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwp9CiNidG5Db2xvciB7CiAgYm9yZGVyLWNvbG9yOiAjMDQ3NGJkOwogIGJhY2tncm91bmQtY29sb3I6ICMwNDljZmM7CiAgY29sb3I6IHdoaXRlOwp9Cg=="},{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"User.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div id=\"User\">\n    <v-container class=\"mt-5\">\n      <h3>{{ words.user.title }}</h3>\n      <v-row class=\"mt-5\">\n        <v-col cols=\"4\">\n          <div @click=\"editUserName\">\n            <ButtonText :message=\"words.user.userName\"></ButtonText>\n          </div>\n        </v-col>\n\n        <v-col cols=\"4\">\n          <div @click=\"editUserEmail\">\n            <ButtonText :message=\"words.user.mail\"></ButtonText>\n          </div>\n        </v-col>\n\n        <v-col cols=\"4\">\n          <div @click=\"editUserPassword\">\n            <ButtonText :message=\"words.user.password\"></ButtonText>\n          </div>\n        </v-col>\n      </v-row>\n    </v-container>\n\n    <v-divider></v-divider>\n\n    <v-container>\n      <v-row>\n        <v-col>\n          <v-card class=\"py-5\">\n            <v-card-title class=\"font-weight-bold\">\n              <h3>{{ words.user.userList }}</h3>\n              <v-spacer></v-spacer>\n              <v-text-field\n                v-model=\"search\"\n                append-icon=\"mdi-magnify\"\n                :label=\"words.user.search\"\n                single-line\n                hide-detail\n              ></v-text-field>\n            </v-card-title>\n            <v-data-table\n              :headers=\"headers\"\n              :items=\"userDatas\"\n              :search=\"search\"\n              locale=\"ja\"\n            >\n              <template v-slot:[`item.delete`]=\"{ item }\">\n                <v-btn\n                  small\n                  class=\"red lighten-1 font-weight-bold white--text\"\n                  @click=\"dialogDelete(item)\"\n                >\n                  {{ words.user.delete }}\n                </v-btn>\n                <v-dialog v-model=\"confirm\" max-width=\"500px\">\n                  <v-card>\n                    <v-card-title> {{ words.user.confirm }} </v-card-title>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn @click=\"close\">{{ words.user.close }}</v-btn>\n                      <v-btn @click=\"deleteConfirm\" class=\"red lighten-1 white--text\">{{\n                        words.user.delete\n                      }}</v-btn>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n              </template>\n            </v-data-table>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport totalApis from \"@/common/totalApis.js\";\nimport totalPages from \"@/common/totalPages.js\";\nimport ButtonText from \"@/components/button/ButtonText.vue\";\nimport words from \"@/words/words.json\";\n\nexport default {\n  name: \"User\",\n  data: () => ({\n    words: words,\n    search: \"\",\n    userDatas: [],\n    selectedUser: [],\n    headers: [\n      { text: \"ユーザー名\", value: \"name\" },\n      { text: \"メールアドレス\", value: \"email\" },\n      { text: \"削除\", value: \"delete\", sortable: false },\n    ],\n    confirm: false,\n    loginUser: null,\n  }),\n  components: {\n    ButtonText,\n  },\n  methods: {\n    editUserName: function () {\n      this.$router.push(totalPages.userSettings().UserNameEdit);\n    },\n    editUserEmail: function () {\n      this.$router.push(totalPages.userSettings().UserEmailEdit);\n    },\n    editUserPassword: function () {\n      this.$router.push(totalPages.userSettings().UserPasswordEdit);\n    },\n    getUsers: function () {\n      axios({\n        method: \"get\",\n        url: totalApis.apis().userList,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.userDatas = response.data;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    dialogDelete: function (item) {\n      this.selectedUser = item;\n      this.confirm = true;\n    },\n    close: function () {\n      this.confirm = false;\n    },\n    deleteConfirm: function () {\n      const id = this.selectedUser.id;\n      console.log(id);\n      axios({\n        method: \"delete\",\n        url: `${totalApis.apis().userDelete + id}/`,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.getUsers();\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      this.confirm = false;\n    },\n    tokenCheck: function () {\n      const token = localStorage.getItem(\"JWT\");\n      if (!token) {\n        this.$router.push(totalPages.menuPages().SignIn);\n      } else {\n        this.tokenVerify();\n      }\n    },\n    tokenVerify: function () {\n      const token = localStorage.getItem(\"JWT\");\n      axios({\n        method: \"post\",\n        url: totalApis.apis().tokenVerify,\n        data: {\n          token: token,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.tokenRefresh();\n        })\n        .catch((error) => {\n          console.log(error);\n          this.$router.push(totalPages.menuPages().SignIn);\n        });\n    },\n    tokenRefresh: function () {\n      const token = localStorage.getItem(\"JWT\");\n      axios({\n        method: \"post\",\n        url: totalApis.apis().tokenRefresh,\n        data: {\n          token: token,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n          this.$router.push(totalPages.menuPages().SignIn);\n        });\n    },\n  },\n  mounted: function () {\n    this.getUsers();\n  },\n  beforeMount: function () {\n    this.tokenCheck();\n  },\n};\n</script>\n<style scoped>\n#User {\n  width: 100%;\n  height: 100%;\n}\n#btnColor {\n  border-color: #0474bd;\n  background-color: #049cfc;\n  color: white;\n}\n</style>\n"]}]}