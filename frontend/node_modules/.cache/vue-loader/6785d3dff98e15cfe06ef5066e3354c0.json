{"remainingRequest":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsubasa/project/frontend/src/components/User/User.vue?vue&type=style&index=0&id=033c17a2&scoped=true&lang=css&","dependencies":[{"path":"/Users/tsubasa/project/frontend/src/components/User/User.vue","mtime":1627133141838},{"path":"/Users/tsubasa/project/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNVc2VyIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7Cn0KI2J0bkNvbG9yIHsKICBib3JkZXItY29sb3I6ICMwNDc0YmQ7CiAgYmFja2dyb3VuZC1jb2xvcjogIzA0OWNmYzsKICBjb2xvcjogd2hpdGU7Cn0K"},{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"User.vue","sourceRoot":"src/components/User","sourcesContent":["<template>\n  <div id=\"User\">\n    <v-container class=\"mt-5\">\n      <v-row>\n        <v-col>\n          <v-btn>ログインユーザー編集</v-btn>\n        </v-col>\n      </v-row>\n\n      <v-row>\n        <v-col>\n          <v-card class=\"py-5\">\n            <v-card-title class=\"font-weight-bold\">\n              <h3>ユーザーリスト</h3>\n              <v-spacer></v-spacer>\n              <v-text-field\n                v-model=\"search\"\n                append-icon=\"mdi-magnify\"\n                label=\"検索\"\n                single-line\n                hide-detail\n              ></v-text-field>\n            </v-card-title>\n            <v-data-table\n              :headers=\"headers\"\n              :items=\"userDatas\"\n              :loading=\"loading\"\n              :search=\"search\"\n              locale=\"ja\"\n            >\n              <template v-slot:[`item.delete`]=\"{ item }\">\n                <v-btn\n                  small\n                  class=\"red lighten-1 font-weight-bold white--text\"\n                  @click=\"dialogDelete(item)\"\n                >\n                  削除\n                </v-btn>\n                <v-dialog v-model=\"confirm\" max-width=\"500px\">\n                  <v-card>\n                    <v-card-title> 本当に削除しますか？ </v-card-title>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn @click=\"close\">閉じる</v-btn>\n                      <v-btn @click=\"deleteConfirm\">削除</v-btn>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n              </template>\n            </v-data-table>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport totalApis from \"@/common/totalApis.js\";\n// import MyEnum from \"@/common/myEnum.js\";\n// import words from \"@/words/words.json\";\n\nexport default {\n  name: \"User\",\n  data: () => ({\n    // words: words,\n    search: \"\",\n    userDatas: [],\n    selectedUser: [],\n    headers: [\n      { text: \"ユーザー名\", value: \"name\" },\n      { text: \"メールアドレス\", value: \"email\" },\n      { text: \"削除\", value: \"delete\", sortable: false },\n    ],\n    confirm: false,\n    loginUser: null,\n  }),\n  methods: {\n    getUsers: function () {\n      axios({\n        method: \"get\",\n        url: totalApis.apis().userList,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.userDatas = response.data;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    dialogDelete: function (item) {\n      this.selectedUser = item;\n      this.confirm = true;\n    },\n    close: function () {\n      this.confirm = false;\n    },\n    deleteConfirm: function () {\n      const id = this.selectedUser.id;\n      console.log(id);\n      axios({\n        method: \"delete\",\n        url: `${totalApis.apis().userDelete + id}/`,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.getUsers();\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      this.confirm = false;\n    },\n  },\n  mounted: function () {\n    this.getUsers();\n  },\n};\n</script>\n<style scoped>\n#User {\n  width: 100%;\n  height: 100%;\n}\n#btnColor {\n  border-color: #0474bd;\n  background-color: #049cfc;\n  color: white;\n}\n</style>\n"]}]}