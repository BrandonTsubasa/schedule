{"remainingRequest":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsubasa/project/frontend/src/views/Task.vue?vue&type=style&index=0&id=f1d4c382&scoped=true&lang=css&","dependencies":[{"path":"/Users/tsubasa/project/frontend/src/views/Task.vue","mtime":1622451143492},{"path":"/Users/tsubasa/project/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiN0YXNrIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7Cn0KaDEgewogIGhlaWdodDogNTBweDsKfQojdGFza2xpbmUgewogIHdpZHRoOiAxMDAlOwogIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrOwogIGJvcmRlci1yYWRpdXM6IDEwcHg7Cn0KLnNlbGVjdExpbmVzIHsKICB3aWR0aDogMTAwJTsKICBib3JkZXI6IDJweCBzb2xpZCBibGFjazsKICBib3JkZXItcmFkaXVzOiAxMHB4Owp9Ci5kYXlQaWNrZXIgPj4+IGlucHV0IHsKICBib3JkZXI6IDJweCBzb2xpZCBibGFjazsKICBib3JkZXItcmFkaXVzOiAxMHB4Owp9CiNidG5Db2xvciB7CiAgYm9yZGVyLWNvbG9yOiAjMDQ3NGJkOwogIGJhY2tncm91bmQtY29sb3I6ICMwNDljZmM7CiAgY29sb3I6IHdoaXRlOwp9Ci50eHQtY29sb3J7CiAgY29sb3I6ICM4MDgwODA7Cn0K"},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Task.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"task\">\n    <v-container>\n      <v-row>\n        <v-col cols=\"4\">\n          <v-text-field\n            v-model=\"title\"\n            type=\"text\"\n            placeholder=\"タスク名を入力してください\"\n          />\n        </v-col>\n        <v-col cols=\"1\">\n          <v-select v-model=\"priority\" label=\"緊急度\">\n          </v-select>\n        </v-col>\n        <v-col cols=\"1\">\n          <v-select v-model=\"status\" label=\"状態\">\n            <option>未着手</option>\n            <option>完了</option>\n          </v-select>\n        </v-col>\n\n\n        <v-col cols=\"3\">\n          <v-menu\n          ref=\"menu\"\n          v-model=\"menu\"\n          :close-on-content-click=\"false\"\n          transition=\"scale-transition\"\n          offset-y\n          min-width=\"auto\"\n          >\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-text-field\n              v-model=\"date\"\n              label=\"期日\"\n              prepend-icon=\"mdi-calendar\"\n              readonly\n              v-bind=\"attrs\"\n              v-on=\"on\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"date\"\n            :active-picker.sync=\"activePicker\"\n            @change=\"save\"\n          ></v-date-picker>\n        </v-menu>\n        </v-col>\n\n\n        <v-col cols=\"3\">\n          <v-text-field v-model=\"name\" label=\"名前\" />\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col>\n          <v-btn medium id=\"btnColor\" @click=\"addTodo\">\n            追加\n          </v-btn>\n        </v-col>\n      </v-row>\n    </v-container>\n\n    <v-container>\n      <v-card class=\"py-5\">\n        <v-row>\n          <v-col>\n            <v-data-table\n            :headers=\"headers\"\n            :items=\"items\"\n            :loading=\"loading\"\n            locale=\"ja\"\n            >\n            <template v-slot:[`item.enddate`]=\"{ item }\">\n              <span>{{ new Date(item.enddate).toLocaleString(\"yyyy/MM/dd\") }}</span>\n            </template>\n            </v-data-table>\n          </v-col>\n        </v-row>\n      </v-card>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport func from 'vue-editor-bridge';\n// import axios from 'axios'\n\nexport default {\n  name: \"task\",\n  data: () => ({\n    loading: false,\n    title: \"\",\n    priority: \"\",\n    status: \"\",\n    name: \"\",\n    today: new Date(),\n    endDate: \"\",\n    activePicker: null,\n    date: null,\n    menu: false,\n    headers : [\n      {\n        text: \"ID\",\n        value: \"id\",\n      },\n      {\n        text: \"タスク名\",\n        value: \"title\",\n      },\n      {\n        text: \"優先度\",\n        value: \"priority\",\n      },\n      {\n        text: \"状態\",\n        value: \"status\",\n      },\n      {\n        text: \"期日\",\n        value: \"enddate\",\n        dataType: \"Date\",\n      },\n      {\n        text: \"名前\",\n        value: \"name\",\n      }\n    ],\n    items: [],\n  }),\n  watch: {\n    menu (val) {\n      val && setTimeout(() => (this.activePicker = 'YEAR'))\n    },\n  },\n  components: {\n  },\n  // mounted: function(){\n  //   console.log('mounted');\n  //   axios({\n  //     method: \"get\",\n  //     url: \"http://localhost:8000/api/task/create/\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   })\n  //   .then(function(response){\n  //     console.log(response.data);\n  //     console.log(\"-------------\");\n\n  //     for(var i = 0; i < response.data.task_id.length; i++){\n  //       console.log(response.data.task_id)\n  //       // this.rows.push({\n  //       //   title: this.title,\n  //       //   priority: this.priority,\n  //       //   status: this.status,\n  //       //   createdAt: moment(this.today).format(\"yyyy MM DD hh:mm\"),\n  //       //   name: this.name,\n  //       //   endDate: moment(this.endDate).format(\"yyyy MM DD\"),\n  //       // })\n  //     }\n  //   })\n  //   .catch(error => {\n  //     console.log(error)\n  //   })\n  // },\n  methods: {\n    addTodo: function() {\n      if (this.title === \"\") {\n        alert(\"作業名を入力してください\");\n        return;\n      }\n      this.items.push({\n        title: this.title,\n        priority: this.priority,\n        status: this.status,\n        createdAt: moment(this.today).format(\"yyyy/MM/DD hh:mm\"),\n        name: this.name,\n        endDate: moment(this.endDate).format(\"yyyy/MM/DD hh:mm\"),\n      });\n      // console.log(this.items)\n      console.log(typeof(this.endDate));\n      console.log(moment(this.endDate).format(\"yyyy/MM/DD hh:mm\"));\n      // endDate: moment(this.endDate).format(\"yyyy/MM/DD hh:mm\"),\n\n      // console.log(enddate);\n\n      this.title = \"\";\n      this.priority = \"\";\n      this.status = \"\";\n      this.today = \"\";\n      this.name = \"\";\n      this.endDate = \"\";\n    },\n    save(date) {\n      this.$ref.menu.save(date)\n    },\n    // allowedDate: function(val) {\n    //   let today = new Date() \n    //   today = new Date(\n    //     today.getFullYear(),\n    //     today.getMonth(),\n    //     today.getDate()\n    //   )\n    // },\n  },\n};\n</script>\n<style scoped>\n#task {\n  width: 100%;\n  height: 100%;\n}\nh1 {\n  height: 50px;\n}\n#taskline {\n  width: 100%;\n  border: 2px solid black;\n  border-radius: 10px;\n}\n.selectLines {\n  width: 100%;\n  border: 2px solid black;\n  border-radius: 10px;\n}\n.dayPicker >>> input {\n  border: 2px solid black;\n  border-radius: 10px;\n}\n#btnColor {\n  border-color: #0474bd;\n  background-color: #049cfc;\n  color: white;\n}\n.txt-color{\n  color: #808080;\n}\n</style>"]}]}