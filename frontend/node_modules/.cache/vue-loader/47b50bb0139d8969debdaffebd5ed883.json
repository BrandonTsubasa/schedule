{"remainingRequest":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsubasa/project/frontend/src/components/input/InputNameInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tsubasa/project/frontend/src/components/input/InputNameInfo.vue","mtime":1630509455540},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0b3RhbFBhZ2VzIGZyb20gIkAvY29tbW9uL3RvdGFsUGFnZXMuanMiOwppbXBvcnQgd29yZHMgZnJvbSAiQC93b3Jkcy93b3Jkcy5qc29uIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSW5wdXROYW1lSW5mbyIsCiAgZGF0YTogKCkgPT4gKHsKICAgIHRvdGFsUGFnZXM6IHRvdGFsUGFnZXMsCiAgICB3b3Jkczogd29yZHMsCiAgICBpbnB1dEVtYWlsOiBudWxsLAogICAgaW5wdXRQYXNzd29yZDogbnVsbCwKICAgIHNob3dQYXNzd29yZDogZmFsc2UsCiAgfSksCiAgcHJvcHM6IHsKICAgIHRleHQxOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIsCiAgICB9LAogICAgdGV4dDI6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIiwKICAgIH0sCiAgICBtZXNzYWdlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIsCiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgaW5wdXRUZXh0KCkgewogICAgICB0aGlzLiRlbWl0KCJpbnB1dC10ZXh0IiwgdGhpcy5pbnB1dEVtYWlsLCB0aGlzLmlucHV0UGFzc3dvcmQpOwogICAgICB0aGlzLmlucHV0RW1haWwgPSAiIjsKICAgICAgdGhpcy5pbnB1dFBhc3N3b3JkID0gIiI7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["InputNameInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InputNameInfo.vue","sourceRoot":"src/components/input","sourcesContent":["<template>\n  <div id=\"InputNameInfo\">\n    <v-container>\n      <div>\n        <ValidationObserver ref=\"obs\" v-slot=\"ObserverProps\">\n          <div>\n            <ValidationProvider\n              :rules=\"totalPages.validateNames().requiredEmail\"\n              v-slot=\"{ errors }\"\n              :name=\"words.userNameEdit.mail\"\n            >\n              <v-text-field\n                :label=\"text1\"\n                outlined\n                v-model=\"inputEmail\"\n                :value=\"inputEmail\"\n                :error-messages=\"errors\"\n              >\n              </v-text-field>\n            </ValidationProvider>\n          </div>\n\n          <div>\n            <ValidationProvider\n              :rules=\"totalPages.validateNames().requiredPassword\"\n              v-slot=\"{ errors }\"\n              :name=\"words.userNameEdit.password\"\n            >\n              <v-text-field\n                :label=\"text2\"\n                outlined\n                v-model=\"inputPassword\"\n                :value=\"inputPassword\"\n                :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                :error-messages=\"errors\"\n                @click:append=\"showPassword = !showPassword\"\n              >\n              </v-text-field>\n            </ValidationProvider>\n          </div>\n\n          <div>\n            <v-btn\n              class=\"font-weight-bold primary lighten-1 float-right\"\n              :disabled=\"!ObserverProps.valid\"\n              @click=\"inputText\"\n            >\n              {{ message }}\n            </v-btn>\n          </div>\n        </ValidationObserver>\n      </div>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport totalPages from \"@/common/totalPages.js\";\nimport words from \"@/words/words.json\";\n\nexport default {\n  name: \"InputNameInfo\",\n  data: () => ({\n    totalPages: totalPages,\n    words: words,\n    inputEmail: null,\n    inputPassword: null,\n    showPassword: false,\n  }),\n  props: {\n    text1: {\n      type: String,\n      default: \"\",\n    },\n    text2: {\n      type: String,\n      default: \"\",\n    },\n    message: {\n      type: String,\n      default: \"\",\n    },\n  },\n  methods: {\n    inputText() {\n      this.$emit(\"input-text\", this.inputEmail, this.inputPassword);\n      this.inputEmail = \"\";\n      this.inputPassword = \"\";\n    },\n  },\n};\n</script>\n\n<style>\n#InputNameInfo {\n  width: 100%;\n  height: auto;\n}\n</style>\n"]}]}