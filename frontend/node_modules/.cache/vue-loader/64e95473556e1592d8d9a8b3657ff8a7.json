{"remainingRequest":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsubasa/project/frontend/src/views/TaskCalendar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/tsubasa/project/frontend/src/views/TaskCalendar.vue","mtime":1630542387593},{"path":"/Users/tsubasa/project/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojZGlzcGxheSB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwp9Cg=="},{"version":3,"sources":["TaskCalendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2eA;AACA;AACA;AACA","file":"TaskCalendar.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-app>\n    <div id=\"display\">\n      <v-container>\n        <v-sheet tile height=\"6vh\" color=\"grey lighten-3\" class=\"d-flex align-center\">\n          <v-btn outlined small class=\"ma-4\" @click=\"setToday\">{{\n            words.calendar.today\n          }}</v-btn>\n          <v-btn icon @click=\"$refs.calendar.prev()\">\n            <v-icon>{{ words.calendar.iconLeft }}</v-icon>\n          </v-btn>\n          <v-btn icon @click=\"$refs.calendar.next()\">\n            <v-icon>{{ words.calendar.iconRight }}</v-icon>\n          </v-btn>\n          <v-toolbar-title>{{ title }}</v-toolbar-title>\n\n          <v-select\n            v-model=\"type\"\n            :items=\"types\"\n            dense\n            outlined\n            hide-details\n            class=\"ma-2\"\n            label=\"type\"\n          ></v-select>\n        </v-sheet>\n        <v-sheet height=\"90vh\" width=\"auto\">\n          <v-calendar\n            ref=\"calendar\"\n            v-model=\"value\"\n            color=\"orange lighten-3\"\n            :type=\"type\"\n            :events=\"events\"\n            :event-color=\"getEventColor\"\n            locale=\"ja-jp\"\n            :day-format=\"(timestamp) => new Date(timestamp.date).getDate()\"\n            :month-format=\"(timestamp) => new Date(timestamp.date).getMonth() + 1 + ' /'\"\n            @change=\"getTaskCal\"\n            @click:event=\"showEvent\"\n          >\n          </v-calendar>\n          <v-dialog v-model=\"editDialog\" fullscreen>\n            <v-card>\n              <v-card-title class=\"text-h5\">{{ words.calendar.edit }}</v-card-title>\n              <v-card-text>\n                <v-container>\n                  <v-row>\n                    <v-col>\n                      <v-text-field\n                        v-model=\"editedItem.task_name\"\n                        :label=\"words.calendar.task\"\n                      ></v-text-field>\n                    </v-col>\n                  </v-row>\n\n                  <v-row>\n                    <v-col>\n                      <v-select\n                        :items=\"priority\"\n                        @change=\"fetchPriority\"\n                        v-model=\"priorityValue\"\n                        :label=\"editedItem.priority\"\n                      >\n                      </v-select>\n                    </v-col>\n\n                    <v-col>\n                      <v-select\n                        :items=\"status\"\n                        @change=\"fetchStatus\"\n                        v-model=\"statusValue\"\n                        :label=\"editedItem.status\"\n                      >\n                      </v-select>\n                    </v-col>\n                  </v-row>\n\n                  <v-row>\n                    <v-col>\n                      <v-menu\n                        ref=\"menu\"\n                        v-model=\"menu\"\n                        :close-on-content-click=\"false\"\n                        :return-value.sync=\"startDate\"\n                        transition=\"scale-transition\"\n                        persistent\n                        offset-y\n                        min-width=\"auto\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"startDate\"\n                            :label=\"words.calendar.startDate\"\n                            prepend-icon=\"mdi-calendar\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                          >\n                          </v-text-field>\n                        </template>\n                        <v-date-picker\n                          v-model=\"startDate\"\n                          scrollable\n                          header-color=\"primary\"\n                        >\n                          <v-spacer></v-spacer>\n                          <v-btn text color=\"primary\" @click=\"menu = false\">\n                            {{ words.calendar.choices[0].cancel }}\n                          </v-btn>\n                          <v-btn text color=\"primary\" @click=\"$refs.menu.save(startDate)\">\n                            {{ words.calendar.choices[1].ok }}\n                          </v-btn>\n                        </v-date-picker>\n                      </v-menu>\n                    </v-col>\n\n                    <v-col>\n                      <v-menu\n                        ref=\"menu2\"\n                        v-model=\"menu2\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        :return-value.sync=\"startTime\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        max-width=\"290px\"\n                        min-width=\"290px\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"startTime\"\n                            :label=\"words.calendar.startTime\"\n                            prepend-icon=\"mdi-clock-time-four-outline\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                          ></v-text-field>\n                        </template>\n                        <v-time-picker v-if=\"menu2\" v-model=\"startTime\" full-width>\n                          <v-spacer></v-spacer>\n                          <v-btn text color=\"primary\" @click=\"menu2 = false\">\n                            {{ words.calendar.choices[0].cancel }}\n                          </v-btn>\n                          <v-btn\n                            text\n                            color=\"primary\"\n                            @click=\"$refs.menu2.save(startTime)\"\n                          >\n                            {{ words.calendar.choices[1].ok }}\n                          </v-btn>\n                        </v-time-picker>\n                      </v-menu>\n                    </v-col>\n                  </v-row>\n\n                  <v-row>\n                    <v-col>\n                      <v-menu\n                        ref=\"menu3\"\n                        v-model=\"menu3\"\n                        :close-on-content-click=\"false\"\n                        :return-value.sync=\"endDate\"\n                        transition=\"scale-transition\"\n                        persistent\n                        offset-y\n                        min-width=\"auto\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"endDate\"\n                            :label=\"words.calendar.endDate\"\n                            prepend-icon=\"mdi-calendar\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                          >\n                          </v-text-field>\n                        </template>\n                        <v-date-picker\n                          v-model=\"endDate\"\n                          scrollable\n                          header-color=\"primary\"\n                        >\n                          <v-spacer></v-spacer>\n                          <v-btn text color=\"primary\" @click=\"menu3 = false\">\n                            {{ words.calendar.choices[0].cancel }}\n                          </v-btn>\n                          <v-btn text color=\"primary\" @click=\"$refs.menu3.save(endDate)\">\n                            {{ words.calendar.choices[1].ok }}\n                          </v-btn>\n                        </v-date-picker>\n                      </v-menu>\n                    </v-col>\n\n                    <v-col>\n                      <v-menu\n                        ref=\"menu4\"\n                        v-model=\"menu4\"\n                        :close-on-content-click=\"false\"\n                        :nudge-right=\"40\"\n                        :return-value.sync=\"endTime\"\n                        transition=\"scale-transition\"\n                        offset-y\n                        max-width=\"290px\"\n                        min-width=\"290px\"\n                      >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-text-field\n                            v-model=\"endTime\"\n                            :label=\"words.calendar.endTime\"\n                            :prepend-icon=\"words.calendar.iconClockTime\"\n                            readonly\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                          ></v-text-field>\n                        </template>\n                        <v-time-picker v-if=\"menu4\" v-model=\"endTime\" full-width>\n                          <v-spacer></v-spacer>\n                          <v-btn text color=\"primary\" @click=\"menu4 = false\">\n                            {{ words.calendar.choices[0].cancel }}\n                          </v-btn>\n                          <v-btn text color=\"primary\" @click=\"$refs.menu4.save(endTime)\">\n                            {{ words.calendar.choices[1].ok }}\n                          </v-btn>\n                        </v-time-picker>\n                      </v-menu>\n                    </v-col>\n                  </v-row>\n                </v-container>\n              </v-card-text>\n\n              <v-card-actions>\n                <v-btn @click=\"close\">{{ words.calendar.close }}</v-btn>\n                <v-spacer></v-spacer>\n                <v-btn @click=\"updateEdit\">{{ words.calendar.update }}</v-btn>\n                <v-btn @click=\"deleteEdit\" class=\"red white--text\">{{\n                  words.calendar.delete\n                }}</v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-sheet>\n      </v-container>\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport totalApis from \"@/common/totalApis.js\";\nimport totalPages from \"@/common/totalPages.js\";\nimport words from \"@/words/words.json\";\n\nexport default {\n  data: () => ({\n    words: words,\n    allTasks: [],\n    editDialog: false,\n    editedItem: {\n      task_id: null,\n      task_name: null,\n      priority: [],\n      priorityValue: \"\",\n      status: [],\n      statusValue: \"\",\n      start_date: null,\n      end_date: null,\n      user_name: null,\n    },\n    taskName: \"\",\n    priority: [\"高い\", \"普通\", \"低い\"],\n    selectedPriority: null,\n    status: [\"未完了\", \"完了\"],\n    selectedStatus: null,\n    startDate: null,\n    menu: false,\n    startTime: null,\n    menu2: null,\n    endDate: null,\n    menu3: null,\n    endTime: null,\n    menu4: null,\n    events: [],\n    value: moment().format(\"yyyy-MM-DD\"),\n    type: \"month\",\n    types: [\"month\", \"week\", \"day\"],\n  }),\n  computed: {\n    title() {\n      return moment(this.value).format(\"yyyy年 M月\");\n    },\n  },\n  methods: {\n    getTaskCal: function () {\n      axios({\n        method: \"get\",\n        url: totalApis.apis().taskList,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n      })\n        .then((response) => {\n          const result = response?.data;\n          this.events = null;\n          this.allTasks = result;\n          const events = [];\n          const mySelf = Number(localStorage.getItem(\"userId\"));\n\n          result.forEach(function (element, index) {\n            // ユーザー自身のタスク\n            if (mySelf === result[index].user_name) {\n              if (result[index].priority === \"高い\") {\n                events[index] = {\n                  name: element.task_name,\n                  start: element.start_date,\n                  end: element.end_date,\n                  color: \"red\",\n                };\n              } else if (result[index].priority === \"低い\") {\n                events[index] = {\n                  name: element.task_name,\n                  start: element.start_date,\n                  end: element.end_date,\n                  color: \"blue\",\n                };\n              } else {\n                events[index] = {\n                  name: element.task_name,\n                  start: element.start_date,\n                  end: element.end_date,\n                  color: \"grey\",\n                };\n              }\n            }\n          });\n          this.events = events;\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n    setToday() {\n      this.value = moment().format(\"yyyy-MM-DD\");\n    },\n    showEvent: function (item) {\n      const selectedData = item;\n      const Tasks = this.allTasks;\n      let events = null;\n      // 選択したタスクを検索\n      Tasks.forEach(function (element, index) {\n        if (selectedData.event.name === Tasks[index].task_name) {\n          events = {\n            task_id: element.task_id,\n            task_name: element.task_name,\n            priority: element.priority,\n            status: element.status,\n            start_date: element.start_date,\n            end_date: element.end_date,\n            user_name: element.user_name,\n          };\n        }\n      });\n      // 選択したタスクを初期値に代入\n      this.editedItem = Object.assign({}, events);\n      this.selectedPriority = this.editedItem.priority;\n      this.priorityValue = \"\";\n      this.selectedStatus = this.editedItem.status;\n      this.statusValue = \"\";\n      this.startDate = moment(this.editedItem.start_date).format(\"yyyy-MM-DD\");\n      this.startTime = moment(this.editedItem.start_date).format(\"HH:mm\");\n      this.endDate = moment(this.editedItem.end_date).format(\"yyyy-MM-DD\");\n      this.endTime = moment(this.editedItem.end_date).format(\"HH:mm\");\n\n      this.editDialog = true;\n    },\n    getEventColor(event) {\n      return event.color;\n    },\n    fetchPriority: function (event) {\n      this.selectedPriority = event;\n    },\n    fetchStatus: function (event) {\n      this.selectedStatus = event;\n    },\n    close: function () {\n      this.editDialog = false;\n    },\n    updateEdit: function () {\n      const id = this.editedItem.task_id;\n      const startDateTime = moment(`${this.startDate} ${this.startTime}`);\n      console.log(startDateTime);\n      const endDateTime = moment(`${this.endDate} ${this.endTime}`);\n      console.log(endDateTime);\n\n      axios({\n        method: \"put\",\n        url: `${totalApis.apis().taskUpdate + id}/`,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n        data: {\n          task_name: this.editedItem.task_name,\n          user_name: this.editedItem.user_name,\n          status: this.selectedStatus,\n          priority: this.selectedPriority,\n          start_date: startDateTime,\n          end_date: endDateTime,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.getTaskCal();\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n\n      this.editDialog = false;\n    },\n    deleteEdit: function () {\n      const id = this.editedItem.task_id;\n      axios({\n        method: \"delete\",\n        url: `${totalApis.apis().taskDelete + id}/`,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.getTaskCal();\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n\n      this.editDialog = false;\n    },\n\n    tokenCheck: function () {\n      const token = localStorage.getItem(\"JWT\");\n      if (!token) {\n        this.$router.push(totalPages.menuPages().SignIn);\n      } else {\n        this.tokenVerify();\n      }\n    },\n    tokenVerify: function () {\n      const token = localStorage.getItem(\"JWT\");\n      axios({\n        method: \"post\",\n        url: totalApis.apis().tokenVerify,\n        data: {\n          token: token,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.tokenRefresh();\n        })\n        .catch((error) => {\n          console.log(error);\n          this.$router.push(totalPages.menuPages().SignIn);\n        });\n    },\n    tokenRefresh: function () {\n      const token = localStorage.getItem(\"JWT\");\n      axios({\n        method: \"post\",\n        url: totalApis.apis().tokenRefresh,\n        data: {\n          token: token,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n          this.$router.push(totalPages.menuPages().SignIn);\n        });\n    },\n  },\n  beforeMount: function () {\n    this.tokenCheck();\n  },\n};\n</script>\n\n<style>\n#display {\n  width: 100%;\n  height: 100%;\n}\n</style>\n"]}]}