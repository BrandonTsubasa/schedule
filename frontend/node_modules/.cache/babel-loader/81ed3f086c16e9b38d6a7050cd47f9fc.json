{"remainingRequest":"/Users/tsubasa/project/frontend/node_modules/babel-loader/lib/index.js!/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsubasa/project/frontend/src/components/input/InputName.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tsubasa/project/frontend/src/components/input/InputName.vue","mtime":1630508856815},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHRvdGFsUGFnZXMgZnJvbSAiQC9jb21tb24vdG90YWxQYWdlcy5qcyI7CmltcG9ydCB3b3JkcyBmcm9tICJAL3dvcmRzL3dvcmRzLmpzb24iOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIklucHV0VXNlck5hbWUiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0b3RhbFBhZ2VzOiB0b3RhbFBhZ2VzLAogICAgICB3b3Jkczogd29yZHMsCiAgICAgIGlucHV0VXNlcjogIiIKICAgIH07CiAgfSwKICBwcm9wczogewogICAgdGV4dDE6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIgogICAgfSwKICAgIG1lc3NhZ2UxOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIKICAgIH0sCiAgICBtZXNzYWdlMjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICIiCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbnB1dFRleHQ6IGZ1bmN0aW9uIGlucHV0VGV4dCgpIHsKICAgICAgdGhpcy4kZW1pdCgiaW5wdXQtdGV4dCIsIHRoaXMuaW5wdXRVc2VyKTsKICAgICAgdGhpcy5pbnB1dFVzZXIgPSAiIjsKICAgIH0sCiAgICBiYWNrUGFnZXM6IGZ1bmN0aW9uIGJhY2tQYWdlcygpIHsKICAgICAgdGhpcy4kZW1pdCgiYmFjay1wYWdlcyIsIDEpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["InputName.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAA,UAAA,MAAA,wBAAA;AACA,OAAA,KAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,UAAA,EAAA,UADA;AAEA,MAAA,KAAA,EAAA,KAFA;AAGA,MAAA,SAAA,EAAA;AAHA,KAAA;AAAA,GAFA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AATA,GAPA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,KAAA,SAAA;AACA,WAAA,SAAA,GAAA,EAAA;AACA,KAJA;AAKA,IAAA,SALA,uBAKA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,CAAA;AACA;AAPA;AArBA,CAAA","sourcesContent":["<template>\n  <div id=\"InputUserName\">\n    <v-container>\n      <div>\n        <ValidationObserver ref=\"obs\" v-slot=\"ObserverProps\">\n          <ValidationProvider\n            :rules=\"totalPages.validateNames().required\"\n            v-slot=\"{ errors }\"\n            :name=\"words.userNameEdit.name\"\n          >\n            <v-text-field\n              :label=\"text1\"\n              outlined\n              v-model=\"inputUser\"\n              :value=\"inputUser\"\n              :error-messages=\"errors\"\n            >\n            </v-text-field>\n          </ValidationProvider>\n\n          <v-row>\n            <v-col>\n              <v-btn\n                class=\"font-weight-bold primary lighten-1 float-left\"\n                @click=\"backPages\"\n              >\n                {{ message1 }}\n              </v-btn>\n            </v-col>\n            <v-col>\n              <v-btn\n                class=\"font-weight-bold primary lighten-1 float-right\"\n                :disabled=\"!ObserverProps.valid\"\n                @click=\"inputText\"\n              >\n                {{ message2 }}\n              </v-btn>\n            </v-col>\n          </v-row>\n        </ValidationObserver>\n      </div>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport totalPages from \"@/common/totalPages.js\";\nimport words from \"@/words/words.json\";\n\nexport default {\n  name: \"InputUserName\",\n  data: () => ({\n    totalPages: totalPages,\n    words: words,\n    inputUser: \"\",\n  }),\n  props: {\n    text1: {\n      type: String,\n      default: \"\",\n    },\n    message1: {\n      type: String,\n      default: \"\",\n    },\n    message2: {\n      type: String,\n      default: \"\",\n    },\n  },\n  methods: {\n    inputText() {\n      this.$emit(\"input-text\", this.inputUser);\n      this.inputUser = \"\";\n    },\n    backPages() {\n      this.$emit(\"back-pages\", 1);\n    },\n  },\n};\n</script>\n\n<style>\n#InputUserName {\n  width: 100%;\n  height: auto;\n}\n</style>\n"],"sourceRoot":"src/components/input"}]}