{"remainingRequest":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tsubasa/project/frontend/src/views/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tsubasa/project/frontend/src/views/Task.vue","mtime":1630542963367},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tsubasa/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tsubasa/project/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Task.vue"],"names":[],"mappingsujfile":"Task.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"task\">\n    <ValidationObserver ref=\"obs\" v-slot=\"ObserverProps\">\n      <v-container>\n        <v-form>\n          <v-row>\n            <v-col cols=\"6\">\n              <ValidationProvider\n                :rules=\"totalPages.validateNames().required\"\n                v-slot=\"{ errors }\"\n                :name=\"words.task.taskName\"\n              >\n                <v-text-field\n                  v-model=\"taskName\"\n                  type=\"text\"\n                  autofocus\n                  :label=\"words.task.taskName\"\n                  :error-messages=\"errors\"\n                >\n                </v-text-field>\n              </ValidationProvider>\n            </v-col>\n            <v-col cols=\"3\">\n              <ValidationProvider\n                :rules=\"totalPages.validateNames().required\"\n                v-slot=\"{ errors }\"\n                :name=\"words.task.priority\"\n              >\n                <v-select\n                  :items=\"priority\"\n                  v-model=\"priorityValue\"\n                  @change=\"fetchPriority\"\n                  :error-messages=\"errors\"\n                  :label=\"words.task.priority\"\n                >\n                </v-select>\n              </ValidationProvider>\n            </v-col>\n            <v-col cols=\"3\">\n              <v-select\n                :items=\"status\"\n                v-model=\"statusValue\"\n                @change=\"fetchStatus\"\n                :label=\"words.task.status\"\n              >\n              </v-select>\n            </v-col>\n          </v-row>\n\n          <v-row>\n            <v-col cols=\"2\">\n              <v-menu\n                ref=\"menu\"\n                v-model=\"menu\"\n                :close-on-content-click=\"false\"\n                :return-value.sync=\"startDate\"\n                transition=\"scale-transition\"\n                persistent\n                offset-y\n                min-width=\"auto\"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <ValidationProvider\n                    :rules=\"totalPages.validateNames().required\"\n                    :name=\"words.task.startDate\"\n                    v-slot=\"{ errors }\"\n                  >\n                    <v-text-field\n                      v-model=\"startDate\"\n                      :label=\"words.task.startDate\"\n                      prepend-icon=\"mdi-calendar\"\n                      readonly\n                      :error-messages=\"errors\"\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                    >\n                    </v-text-field>\n                  </ValidationProvider>\n                </template>\n                <v-date-picker v-model=\"startDate\" scrollable header-color=\"primary\">\n                  <v-spacer></v-spacer>\n                  <v-btn text color=\"primary\" @click=\"menu = false\">\n                    {{ words.task.choices[0].cancel }}\n                  </v-btn>\n                  <v-btn text color=\"primary\" @click=\"$refs.menu.save(startDate)\">\n                    {{ words.task.choices[1].ok }}\n                  </v-btn>\n                </v-date-picker>\n              </v-menu>\n            </v-col>\n\n            <v-col cols=\"2\">\n              <v-menu\n                ref=\"menu2\"\n                v-model=\"menu2\"\n                :close-on-content-click=\"false\"\n                :nudge-right=\"40\"\n                :return-value.sync=\"startTime\"\n                transition=\"scale-transition\"\n                offset-y\n                max-width=\"290px\"\n                min-width=\"290px\"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <ValidationProvider\n                    :rules=\"totalPages.validateNames().required\"\n                    :name=\"words.task.startTime\"\n                    v-slot=\"{ errors }\"\n                  >\n                    <v-text-field\n                      v-model=\"startTime\"\n                      :label=\"words.task.startTime\"\n                      prepend-icon=\"mdi-clock-time-four-outline\"\n                      readonly\n                      :error-messages=\"errors\"\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                    ></v-text-field>\n                  </ValidationProvider>\n                </template>\n                <v-time-picker v-if=\"menu2\" v-model=\"startTime\" full-width>\n                  <v-spacer></v-spacer>\n                  <v-btn text color=\"primary\" @click=\"menu2 = false\">\n                    {{ words.task.choices[0].cancel }}\n                  </v-btn>\n                  <v-btn text color=\"primary\" @click=\"$refs.menu2.save(startTime)\">\n                    {{ words.task.choices[1].ok }}\n                  </v-btn>\n                </v-time-picker>\n              </v-menu>\n            </v-col>\n\n            <v-col cols=\"2\">\n              <v-menu\n                ref=\"menu3\"\n                v-model=\"menu3\"\n                :close-on-content-click=\"false\"\n                :return-value.sync=\"endDate\"\n                transition=\"scale-transition\"\n                persistent\n                offset-y\n                min-width=\"auto\"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <ValidationProvider\n                    :rules=\"totalPages.validateNames().required\"\n                    :name=\"words.task.endDate\"\n                    v-slot=\"{ errors }\"\n                  >\n                    <v-text-field\n                      v-model=\"endDate\"\n                      :label=\"words.task.endDate\"\n                      prepend-icon=\"mdi-calendar\"\n                      readonly\n                      :error-messages=\"errors\"\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                    >\n                    </v-text-field>\n                  </ValidationProvider>\n                </template>\n                <v-date-picker v-model=\"endDate\" scrollable header-color=\"primary\">\n                  <v-spacer></v-spacer>\n                  <v-btn text color=\"primary\" @click=\"menu3 = false\">\n                    {{ words.task.choices[0].cancel }}\n                  </v-btn>\n                  <v-btn text color=\"primary\" @click=\"$refs.menu3.save(endDate)\">\n                    {{ words.task.choices[1].ok }}\n                  </v-btn>\n                </v-date-picker>\n              </v-menu>\n            </v-col>\n\n            <v-col cols=\"2\">\n              <v-menu\n                ref=\"menu4\"\n                v-model=\"menu4\"\n                :close-on-content-click=\"false\"\n                :nudge-right=\"40\"\n                :return-value.sync=\"endTime\"\n                transition=\"scale-transition\"\n                offset-y\n                max-width=\"290px\"\n                min-width=\"290px\"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <ValidationProvider\n                    :rules=\"totalPages.validateNames().required\"\n                    :name=\"words.task.endTime\"\n                    v-slot=\"{ errors }\"\n                  >\n                    <v-text-field\n                      v-model=\"endTime\"\n                      :label=\"words.task.endTime\"\n                      prepend-icon=\"mdi-clock-time-four-outline\"\n                      readonly\n                      :error-messages=\"errors\"\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                    ></v-text-field>\n                  </ValidationProvider>\n                </template>\n                <v-time-picker v-if=\"menu4\" v-model=\"endTime\" full-width>\n                  <v-spacer></v-spacer>\n                  <v-btn text color=\"primary\" @click=\"menu4 = false\">\n                    {{ words.task.choices[0].cancel }}\n                  </v-btn>\n                  <v-btn text color=\"primary\" @click=\"$refs.menu4.save(endTime)\">\n                    {{ words.task.choices[1].ok }}\n                  </v-btn>\n                </v-time-picker>\n              </v-menu>\n            </v-col>\n\n            <v-col cols=\"4\">\n              <ValidationProvider\n                :rules=\"totalPages.validateNames().required\"\n                v-slot=\"{ errors }\"\n                :name=\"words.task.name\"\n              >\n                <v-select\n                  :items=\"userInfo\"\n                  v-model=\"selected\"\n                  item-text=\"name\"\n                  item-value=\"id\"\n                  required\n                  :error-messages=\"errors\"\n                  @change=\"fetchName\"\n                  :label=\"words.task.name\"\n                >\n                </v-select>\n              </ValidationProvider>\n            </v-col>\n          </v-row>\n\n          <v-row>\n            <v-col>\n              <v-btn\n                medium\n                class=\"blue lighten-1 font-weight-bold white--text\"\n                :disabled=\"!ObserverProps.valid\"\n                @click=\"addTodo\"\n              >\n                {{ words.task.add }}\n              </v-btn>\n            </v-col>\n          </v-row>\n        </v-form>\n      </v-container>\n    </ValidationObserver>\n\n    <v-container>\n      <v-card class=\"py-5\">\n        <v-row>\n          <v-col>\n            <v-card-title class=\"font-weight-bold\">\n              {{ words.task.list }}\n              <v-spacer></v-spacer>\n              <v-text-field\n                v-model=\"search\"\n                append-icon=\"mdi-magnify\"\n                :label=\"words.task.search\"\n                single-line\n                hide-details\n              ></v-text-field>\n            </v-card-title>\n            <v-data-table\n              :headers=\"headers\"\n              :items=\"tableDatas\"\n              :loading=\"loading\"\n              :search=\"search\"\n              locale=\"ja\"\n            >\n              <template v-slot:[`item.priority`]=\"{ item }\">\n                <v-chip :color=\"getColor(item.priority)\" dark>\n                  {{ item.priority }}\n                </v-chip>\n              </template>\n              <template v-slot:top>\n                <v-dialog v-model=\"dialogEdit\" fullscreen>\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ words.task.edit }}</span>\n                    </v-card-title>\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col>\n                            <v-text-field v-model=\"editedItem.task_name\"> </v-text-field>\n                          </v-col>\n                        </v-row>\n\n                        <v-row>\n                          <v-col>\n                            <v-select\n                              :items=\"priority\"\n                              v-model=\"priorityValue\"\n                              @change=\"fetchPriority\"\n                              :label=\"editedItem.priority\"\n                            >\n                            </v-select>\n                          </v-col>\n\n                          <v-col>\n                            <v-select\n                              :items=\"status\"\n                              v-model=\"statusValue\"\n                              @change=\"fetchStatus\"\n                              :label=\"editedItem.status\"\n                            ></v-select>\n                          </v-col>\n                        </v-row>\n\n                        <v-row>\n                          <v-col>\n                            <v-menu\n                              ref=\"menuEdit\"\n                              v-model=\"menuEdit\"\n                              :close-on-content-click=\"false\"\n                              :return-value.sync=\"startDateEdit\"\n                              transition=\"scale-transition\"\n                              persistent\n                              offset-y\n                              min-width=\"auto\"\n                            >\n                              <template v-slot:activator=\"{ on, attrs }\">\n                                <v-text-field\n                                  v-model=\"startDateEdit\"\n                                  :label=\"words.task.startDate\"\n                                  prepend-icon=\"mdi-calendar\"\n                                  readonly\n                                  v-bind=\"attrs\"\n                                  v-on=\"on\"\n                                >\n                                </v-text-field>\n                              </template>\n                              <v-date-picker\n                                v-model=\"startDateEdit\"\n                                scrollable\n                                header-color=\"primary\"\n                              >\n                                <v-spacer></v-spacer>\n                                <v-btn text color=\"primary\" @click=\"menuEdit = false\">\n                                  {{ words.task.choices[0].cancel }}\n                                </v-btn>\n                                <v-btn\n                                  text\n                                  color=\"primary\"\n                                  @click=\"$refs.menuEdit.save(startDateEdit)\"\n                                >\n                                  {{ words.task.choices[1].ok }}\n                                </v-btn>\n                              </v-date-picker>\n                            </v-menu>\n                          </v-col>\n\n                          <v-col>\n                            <v-menu\n                              ref=\"menuEdit2\"\n                              v-model=\"menuEdit2\"\n                              :close-on-content-click=\"false\"\n                              :nudge-right=\"40\"\n                              :return-value.sync=\"startTimeEdit\"\n                              transition=\"scale-transition\"\n                              offset-y\n                              max-width=\"290px\"\n                              min-width=\"290px\"\n                            >\n                              <template v-slot:activator=\"{ on, attrs }\">\n                                <v-text-field\n                                  v-model=\"startTimeEdit\"\n                                  :label=\"words.task.startTime\"\n                                  prepend-icon=\"mdi-clock-time-four-outline\"\n                                  readonly\n                                  v-bind=\"attrs\"\n                                  v-on=\"on\"\n                                ></v-text-field>\n                              </template>\n                              <v-time-picker v-if=\"menuEdit2\" v-model=\"startTimeEdit\">\n                                <v-spacer></v-spacer>\n                                <v-btn text color=\"primary\" @click=\"menuEdit2 = false\">\n                                  {{ words.task.choices[0].cancel }}\n                                </v-btn>\n                                <v-btn\n                                  text\n                                  color=\"primary\"\n                                  @click=\"$refs.menuEdit2.save(startTimeEdit)\"\n                                >\n                                  {{ words.task.choices[1].ok }}\n                                </v-btn>\n                              </v-time-picker>\n                            </v-menu>\n                          </v-col>\n                        </v-row>\n\n                        <v-row>\n                          <v-col>\n                            <v-menu\n                              ref=\"menuEdit3\"\n                              v-model=\"menuEdit3\"\n                              :close-on-content-click=\"false\"\n                              :return-value.sync=\"endDateEdit\"\n                              transition=\"scale-transition\"\n                              persistent\n                              offset-y\n                              min-width=\"auto\"\n                            >\n                              <template v-slot:activator=\"{ on, attrs }\">\n                                <v-text-field\n                                  v-model=\"endDateEdit\"\n                                  :label=\"words.task.endDate\"\n                                  prepend-icon=\"mdi-calendar\"\n                                  readonly\n                                  v-bind=\"attrs\"\n                                  v-on=\"on\"\n                                >\n                                </v-text-field>\n                              </template>\n                              <v-date-picker\n                                v-model=\"endDateEdit\"\n                                scrollable\n                                header-color=\"primary\"\n                              >\n                                <v-spacer></v-spacer>\n                                <v-btn text color=\"primary\" @click=\"menuEdit3 = false\">\n                                  {{ words.task.choices[0].cancel }}\n                                </v-btn>\n                                <v-btn\n                                  text\n                                  color=\"primary\"\n                                  @click=\"$refs.menuEdit3.save(endDateEdit)\"\n                                >\n                                  {{ words.task.choices[1].ok }}\n                                </v-btn>\n                              </v-date-picker>\n                            </v-menu>\n                          </v-col>\n\n                          <v-col>\n                            <v-menu\n                              ref=\"menuEdit4\"\n                              v-model=\"menuEdit4\"\n                              :close-on-content-click=\"false\"\n                              :nudge-right=\"40\"\n                              :return-value.sync=\"endTimeEdit\"\n                              transition=\"scale-transition\"\n                              offset-y\n                              max-width=\"290px\"\n                              min-width=\"290px\"\n                            >\n                              <template v-slot:activator=\"{ on, attrs }\">\n                                <v-text-field\n                                  v-model=\"endTimeEdit\"\n                                  :label=\"words.task.endTime\"\n                                  prepend-icon=\"mdi-clock-time-four-outline\"\n                                  readonly\n                                  v-bind=\"attrs\"\n                                  v-on=\"on\"\n                                ></v-text-field>\n                              </template>\n                              <v-time-picker v-if=\"menuEdit4\" v-model=\"endTimeEdit\">\n                                <v-spacer></v-spacer>\n                                <v-btn text color=\"primary\" @click=\"menuEdit4 = false\">\n                                  {{ words.task.choices[0].cancel }}\n                                </v-btn>\n                                <v-btn\n                                  text\n                                  color=\"primary\"\n                                  @click=\"$refs.menuEdit4.save(endTimeEdit)\"\n                                >\n                                  {{ words.task.choices[1].ok }}\n                                </v-btn>\n                              </v-time-picker>\n                            </v-menu>\n                          </v-col>\n                        </v-row>\n\n                        <v-row>\n                          <v-select\n                            :items=\"userInfo\"\n                            v-model=\"selected\"\n                            item-text=\"name\"\n                            item-value=\"id\"\n                            @change=\"fetchName\"\n                            :label=\"editedItem.user_name\"\n                          >\n                          </v-select>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n                    <v-card-text>\n                      <v-card-actions>\n                        <v-btn @click=\"closeEdit\">{{ words.task.close }}</v-btn>\n                        <v-btn @click=\"updateEdit\">{{ words.task.update }}</v-btn>\n                        <v-spacer></v-spacer>\n                      </v-card-actions>\n                    </v-card-text>\n                  </v-card>\n                  <v-spacer></v-spacer>\n                </v-dialog>\n                <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n                  <v-card>\n                    <v-card-title class=\"text-h5\">{{\n                      messages.task.confirm.delete\n                    }}</v-card-title>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn @click=\"closeDelete\">{{ words.task.close }}</v-btn>\n                      <v-btn\n                        @click=\"deleteItemConfirm\"\n                        class=\"red lighten-1 white--text\"\n                        >{{ words.task.delete }}</v-btn\n                      >\n                      <v-spacer></v-spacer>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n                <v-dialog v-model=\"dialogFinish\" max-width=\"500px\">\n                  <v-card>\n                    <v-card-title class=\"text-h5\">{{\n                      messages.task.confirm.finish\n                    }}</v-card-title>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn @click=\"closeFinish\">{{ words.task.close }}</v-btn>\n                      <v-btn\n                        @click=\"finishItemConfirm\"\n                        class=\"blue lighten-1 white--text\"\n                        >{{ words.task.finish }}</v-btn\n                      >\n                      <v-spacer></v-spacer>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n              </template>\n\n              <template v-slot:[`item.actions`]=\"{ item }\">\n                <v-btn small @click=\"editItem(item)\">\n                  <v-icon>\n                    {{ words.task.iconPencil }}\n                  </v-icon>\n                </v-btn>\n                <v-btn small @click=\"deleteItem(item)\">\n                  <v-icon>\n                    {{ words.task.iconDelete }}\n                  </v-icon>\n                </v-btn>\n              </template>\n\n              <template v-slot:[`item.finish`]=\"{ item }\">\n                <v-btn\n                  small\n                  class=\"blue lighten-1 font-weight-bold white--text\"\n                  @click=\"finishedItem(item)\"\n                >\n                  {{ words.task.finish }}\n                </v-btn>\n              </template>\n            </v-data-table>\n          </v-col>\n        </v-row>\n      </v-card>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport totalApis from \"@/common/totalApis.js\";\nimport totalPages from \"@/common/totalPages.js\";\nimport moment from \"moment\";\nimport messages from \"@/messages/messages.json\";\nimport words from \"@/words/words.json\";\n\nexport default {\n  name: \"task\",\n  data: () => ({\n    words: words,\n    messages: messages,\n    totalPages: totalPages,\n    dialogEdit: false,\n    dialogDelete: false,\n    dialogFinish: false,\n    loading: false,\n    search: \"\",\n    taskName: \"\",\n    priority: [\"高い\", \"普通\", \"低い\"],\n    priorityValue: \"\",\n    selectedPriority: null,\n    status: [\"未完了\", \"完了\"],\n    statusValue: \"\",\n    selectedStatus: null,\n    userInfo: [],\n    selected: [],\n    selectedName: null,\n    startDate: null,\n    endDate: null,\n    startTime: null,\n    endTime: null,\n    taskData: null,\n    menu: false,\n    menu2: false,\n    menu3: false,\n    menu4: false,\n    startDateEdit: null,\n    startTimeEdit: null,\n    endDateEdit: null,\n    endTimeEdit: null,\n    menuEdit: null,\n    menuEdit2: null,\n    menuEdit3: null,\n    menuEdit4: null,\n    headers: [\n      { text: \"ID\", value: \"task_id\" },\n      { text: \"タスク名\", value: \"task_name\" },\n      { text: \"緊急度\", value: \"priority\" },\n      { text: \"状態\", value: \"status\" },\n      { text: \"開始日\", value: \"start_date\" },\n      { text: \"終了日\", value: \"end_date\" },\n      { text: \"名前\", value: \"user_name\" },\n      { text: \"編集 / 削除\", value: \"actions\", sortable: false },\n      { text: \"完了\", value: \"finish\", sortable: false },\n    ],\n    beforeDatas: [],\n    tableDatas: [],\n    editedItem: {\n      task_name: \"\",\n      priority: [],\n      status: [],\n      start_date: null,\n      end_date: null,\n      user_name: \"\",\n    },\n  }),\n  methods: {\n    fetchPriority(event) {\n      this.selectedPriority = event;\n    },\n    fetchStatus(event) {\n      this.selectedStatus = event;\n    },\n    fetchName(event) {\n      this.selectedName = event;\n    },\n    getTasks: function () {\n      axios({\n        method: \"get\",\n        url: totalApis.apis().taskList,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n      })\n        .then((response) => {\n          this.beforeDatas = response?.data;\n          this.tableDatas = this.beforeDatas;\n          this.beforeDatas = this.beforeDatas.map((data) => {\n            const result = this.userInfo.find(({ id }) => {\n              return id === data.user_name;\n            });\n            data.user_name = result.name;\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n\n    addTodo: function () {\n      const startDateTime = moment(`${this.startDate} ${this.startTime}`);\n      const endDateTime = moment(`${this.endDate} ${this.endTime}`);\n      if (startDateTime > endDateTime) {\n        return;\n      }\n      // 状態は未選択であれば、デフォルトで未完了に設定\n      if (this.selectedStatus === null || \"\") {\n        this.selectedStatus = \"未完了\";\n      }\n\n      axios({\n        method: \"post\",\n        url: totalApis.apis().taskCreate,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n        data: {\n          task_name: this.taskName,\n          user_name: this.selectedName,\n          status: this.selectedStatus,\n          priority: this.selectedPriority,\n          start_date: startDateTime,\n          end_date: endDateTime,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.taskName = null;\n          this.selectedName = null;\n          this.selectedPriority = \"\";\n          this.priorityValue = \"\";\n          this.selectedStatus = null;\n          this.statusValue = \"\";\n          this.startDate = null;\n          this.startTime = null;\n          this.endDate = null;\n          this.endTime = null;\n          this.selected = \"\";\n          this.getTasks();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n\n    editItem(item) {\n      this.priorityValue = \"\";\n      this.statusValue = \"\";\n      this.editedItem = Object.assign({}, item);\n      this.selectedPriority = this.editedItem.priority;\n      this.selectedStatus = this.editedItem.status;\n      this.startDateEdit = moment(this.editedItem.start_date).format(\"yyyy-MM-DD\");\n      this.startTimeEdit = moment(this.editedItem.start_date).format(\"HH:mm\");\n      this.endDateEdit = moment(this.editedItem.end_date).format(\"yyyy-MM-DD\");\n      this.endTimeEdit = moment(this.editedItem.end_date).format(\"HH:mm\");\n      this.dialogEdit = true;\n    },\n\n    deleteItem(item) {\n      this.taskData = item;\n      this.dialogDelete = true;\n    },\n    closeEdit: function () {\n      this.selectedPriority = null;\n      this.priorityValue = \"\";\n      this.selectedStatus = null;\n      this.statusValue = \"\";\n      this.startDateEdit = null;\n      this.endDateEdit = null;\n      this.startTimeEdit = null;\n      this.endTimeEdit = null;\n\n      this.dialogEdit = false;\n    },\n    updateEdit: function () {\n      const startDateTime = moment(`${this.startDateEdit} ${this.startTimeEdit}`);\n      const endDateTime = moment(`${this.endDateEdit} ${this.endTimeEdit}`);\n      const id = this.editedItem.task_id;\n      const nameId = this.selectedName;\n      const userName = this.editedItem.user_name;\n      let user = null;\n\n      // 名前を未選択の場合\n      if (!nameId) {\n        user = this.userInfo.find(({ name }) => {\n          return name === userName;\n        });\n        user = user.id;\n      } else {\n        user = this.selectedName;\n      }\n\n      axios({\n        method: \"put\",\n        url: `${totalApis.apis().taskUpdate + id}/`,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n        data: {\n          task_name: this.editedItem.task_name,\n          user_name: user,\n          status: this.selectedStatus,\n          priority: this.selectedPriority,\n          start_date: startDateTime,\n          end_date: endDateTime,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.selectedName = null;\n          this.priorityValue = \"\";\n          this.statusValue = \"\";\n          this.startDateEdit = null;\n          this.startTimeEdit = null;\n          this.endDateEdit = null;\n          this.endTimeEdit = null;\n          this.dialogEdit = false;\n          this.getTasks();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n    closeDelete: function () {\n      this.dialogDelete = false;\n    },\n    deleteItemConfirm: function () {\n      const id = this.taskData.task_id;\n      axios({\n        method: \"delete\",\n        url: `${totalApis.apis().taskDelete + id}/`,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.getTasks();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      this.dialogDelete = false;\n    },\n    getColor: function (item) {\n      if (item === \"高い\") {\n        return \"red\";\n      } else if (item === \"低い\") {\n        return \"blue\";\n      } else {\n        return \"grey\";\n      }\n    },\n    getUserList: function () {\n      const self = this;\n\n      axios({\n        method: \"get\",\n        url: totalApis.apis().userList,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n      })\n        .then((response) => {\n          const array = response?.data;\n\n          for (const i in array) {\n            const userId = array[i].id;\n            const userNames = array[i].name;\n            self.userInfo.push({ name: userNames, id: userId });\n          }\n          this.getTasks();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n    finishedItem: function (item) {\n      this.taskData = item;\n      this.dialogFinish = true;\n    },\n    closeFinish: function () {\n      this.dialogFinish = false;\n    },\n    finishItemConfirm: function () {\n      const finish = \"完了\";\n      const selectName = this.taskData.user_name;\n      const selected = this.userInfo.find(({ name }) => {\n        return name === selectName;\n      });\n      const id = this.taskData.task_id;\n      axios({\n        method: \"put\",\n        url: `${totalApis.apis().taskUpdate + id}/`,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem(\"JWT\")}`,\n        },\n        data: {\n          task_name: this.taskData.task_name,\n          user_name: selected.id,\n          status: finish,\n          priority: this.taskData.priority,\n          start_date: this.taskData.start_date,\n          end_date: this.taskData.end_date,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.getTasks();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      this.dialogFinish = false;\n    },\n    tokenCheck: function () {\n      const token = localStorage.getItem(\"JWT\");\n      if (!token) {\n        this.$router.push(totalPages.menuPages().SignIn);\n      } else {\n        this.tokenVerify();\n      }\n    },\n    tokenVerify: function () {\n      const token = localStorage.getItem(\"JWT\");\n      axios({\n        method: \"post\",\n        url: totalApis.apis().tokenVerify,\n        data: {\n          token: token,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n          this.tokenRefresh();\n        })\n        .catch((error) => {\n          console.log(error);\n          this.$router.push(totalPages.menuPages().SignIn);\n        });\n    },\n    tokenRefresh: function () {\n      const token = localStorage.getItem(\"JWT\");\n      axios({\n        method: \"post\",\n        url: totalApis.apis().tokenRefresh,\n        data: {\n          token: token,\n        },\n      })\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n          this.$router.push(totalPages.menuPages().SignIn);\n        });\n    },\n  },\n  mounted: function () {\n    this.getUserList();\n  },\n  beforeMount: function () {\n    this.tokenCheck();\n  },\n};\n</script>\n<style scoped>\n#task {\n  width: 100%;\n  height: 100%;\n}\nh1 {\n  height: 50px;\n}\n</style>\n"]}]}